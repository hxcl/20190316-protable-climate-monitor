C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USER_MAIN
OBJECT MODULE PLACED IN ..\OUT\USER-MAIN.obj
COMPILER INVOKED BY: e:\Keil\C51\BIN\C51.EXE ..\USER-MAIN\USER-MAIN.c BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS
                    - PRINT(..\LISTING\USER-MAIN.lst) TABS(2) OBJECT(..\OUT\USER-MAIN.obj)

line level    source

   1          
   2          #include "..\myConfig.h"
   1      =1  
   2      =1  
   3      =1  #ifndef __myConfig_H
   4      =1  #define __myConfig_H
   5      =1  
   6      =1  
   7      =1  #include "myType.h"
   1      =2  
   2      =2  #ifndef __myType_H
   3      =2  #define __myType_H
   4      =2  
   5      =2  typedef unsigned char u8;
   6      =2  typedef signed char s8;
   7      =2  typedef unsigned int u16;
   8      =2  typedef signed int s16;
   9      =2  typedef long l32;
  10      =2  typedef float f32;
  11      =2  
  12      =2  typedef union union16_{
  13      =2    unsigned int uint;
  14      =2    unsigned char uchar[2];
  15      =2  }union16;
  16      =2  typedef union union32_{
  17      =2    long _long;
  18      =2    unsigned int uint[2];
  19      =2    unsigned char uchar[4];
  20      =2  }union32;
  21      =2  
  22      =2  #define HSB 0
  23      =2  #define LSB 1
  24      =2  
  25      =2  #define BIT_HIGH  1
  26      =2  #define BIT_LOW   0
  27      =2  
  28      =2  #endif//ifndef  __myType_H
  29      =2  
  30      =2  
  31      =2  
  32      =2  
   8      =1  
   9      =1  #include "lcd.h"
   1      =2  /************************************************************************************
   2      =2  ;copyrightn   :shenzhen coolwaveasia 
   3      =2  ;filename     :lcd.h
   4      =2  ;writeby      :dengyihong
   5      =2  ;*************************************************************************************/
   6      =2  
   7      =2  #ifndef _LCD_H
   8      =2  #define _LCD_H
   9      =2  
  10      =2  //#include "maindef.h"
  11      =2  //#include "io.h"
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 2   

  12      =2  
  13      =2  #define U8 unsigned char
  14      =2  #define U16 unsigned int
  15      =2  
  16      =2  
  17      =2  
  18      =2  
  19      =2  #define   ROW(x)       (0x80|(x << 0x06))
  20      =2  #define   COL(x)       (x)
  21      =2  #define   LEN(x)       ((x-0x01) << 0x03)
  22      =2  
  23      =2  #define   LEN_MASK     0x38
  24      =2  #define   COL_MASK     0x07
  25      =2  #define   ROW_MASK     0xC0
  26      =2  #define   ROW_COL      (ROW_MASK|COL_MASK)
  27      =2    
  28      =2  #define   HexDisp(x)   HexDispArray[x]
  29      =2  #define   BYTE_LOW(x)  (x & 0x0F) 
  30      =2  #define   BYTE_HIGH(x) ((x & 0xF0)>>0x04)
  31      =2  /*
  32      =2  void ini_lcd(void);
  33      =2  void lcd_printf_char(U8 disp_char, U8 row_col);
  34      =2  void lcd_printf_string(U8 *disp_str, U8 row_len_col);
  35      =2  void lcd_write_reg(U8 command);
  36      =2  void lcd_write_data(U8 value);
  37      =2  void lcd_wait(void);
  38      =2  */
  39      =2  
  40      =2  void delay_2us(U16 delay_cnt);
  41      =2  
  42      =2  void ini_lcd(void);
  43      =2  void lcd_printf_char(U8 disp_char, U8 row_col);
  44      =2  void lcd_printf_string(U8 *disp_str, U8 row_len_col);
  45      =2  void lcd_write_reg(U8 command);
  46      =2  void lcd_write_data(U8 value);
  47      =2  void lcd_wait(void);
  48      =2  void hex_to_assic(U8 hex_data, U8 *str);
  49      =2  
  50      =2  //extern void delay_2us(U16 delay_cnt);
  51      =2  
  52      =2  
  53      =2  #endif
  10      =1  
  11      =1  #include "./MCU/MCU-STC11L04.h"
   1      =2  
   2      =2  
   3      =2  #ifndef __MCU_STC11L04_H
   4      =2  #define __MCU_STC11L04_H
   5      =2  
   6      =2  #if 0
           =2 #define SYSCLK  12000000
           =2 #define BAUDRATE  57600//9600
           =2 #else
  10      =2  #define SYSCLK  11059200
  11      =2  #define BAUDRATE  57600//9600
  12      =2  #endif
  13      =2  
  14      =2  //STC11L04扩展寄存器定义说明
  15      =2  sfr BRT = 0x9C;//独立波特率发生器
  16      =2  sfr AUXR = 0x8E;
  17      =2  sfr AUXR1 = 0xA2;
  18      =2  
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 3   

  19      =2  #define RELOAD  ( 256 - (u8)(((SYSCLK/BAUDRATE)/32)+0.5) );
  20      =2  
  21      =2  #define MAX_UART_BUF  10
  22      =2  extern unsigned char gv_uart_buf[MAX_UART_BUF];
  23      =2  extern unsigned char gv_uart_buflen;
  24      =2  
  25      =2  void uart_init ( void );
  26      =2  void send_data ( unsigned char indata );
  27      =2  void uart_send_buf ( int len, unsigned char *packet );
  28      =2  
  29      =2  #define UART_DEBUG 0
  30      =2  #if UART_DEBUG
           =2 void msg ( unsigned char *printf_msg );
           =2 #endif//if UART_DEBUG
  33      =2  
  34      =2  
  35      =2  #endif//ifndef  __MCU_STC11L04_H
  36      =2  
  37      =2  
  38      =2  
  39      =2  
  12      =1  #include "./HARDWARE/SI7021/SI7021.h"
   1      =2  #ifndef _SI7021_H
   2      =2  #define _SI7021_H
   3      =2  
   4      =2  #include "..\..\myType.h"
   1      =3  
   2      =3  #ifndef __myType_H
           =3 #define __myType_H
           =3 
           =3 typedef unsigned char u8;
           =3 typedef signed char s8;
           =3 typedef unsigned int u16;
           =3 typedef signed int s16;
           =3 typedef long l32;
           =3 typedef float f32;
           =3 
           =3 typedef union union16_{
           =3   unsigned int uint;
           =3   unsigned char uchar[2];
           =3 }union16;
           =3 typedef union union32_{
           =3   long _long;
           =3   unsigned int uint[2];
           =3   unsigned char uchar[4];
           =3 }union32;
           =3 
           =3 #define HSB 0
           =3 #define LSB 1
           =3 
           =3 #define BIT_HIGH  1
           =3 #define BIT_LOW   0
           =3 
           =3 #endif//ifndef  __myType_H
  29      =3  
  30      =3  
  31      =3  
  32      =3  
   5      =2  #include <reg52.h> 
   1      =3  /*--------------------------------------------------------------------------
   2      =3  REG52.H
   3      =3  
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 4   

   4      =3  Header file for generic 80C52 and 80C32 microcontroller.
   5      =3  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =3  All rights reserved.
   7      =3  --------------------------------------------------------------------------*/
   8      =3  
   9      =3  #ifndef __REG52_H__
  10      =3  #define __REG52_H__
  11      =3  
  12      =3  /*  BYTE Registers  */
  13      =3  sfr P0    = 0x80;
  14      =3  sfr P1    = 0x90;
  15      =3  sfr P2    = 0xA0;
  16      =3  sfr P3    = 0xB0;
  17      =3  sfr PSW   = 0xD0;
  18      =3  sfr ACC   = 0xE0;
  19      =3  sfr B     = 0xF0;
  20      =3  sfr SP    = 0x81;
  21      =3  sfr DPL   = 0x82;
  22      =3  sfr DPH   = 0x83;
  23      =3  sfr PCON  = 0x87;
  24      =3  sfr TCON  = 0x88;
  25      =3  sfr TMOD  = 0x89;
  26      =3  sfr TL0   = 0x8A;
  27      =3  sfr TL1   = 0x8B;
  28      =3  sfr TH0   = 0x8C;
  29      =3  sfr TH1   = 0x8D;
  30      =3  sfr IE    = 0xA8;
  31      =3  sfr IP    = 0xB8;
  32      =3  sfr SCON  = 0x98;
  33      =3  sfr SBUF  = 0x99;
  34      =3  
  35      =3  /*  8052 Extensions  */
  36      =3  sfr T2CON  = 0xC8;
  37      =3  sfr RCAP2L = 0xCA;
  38      =3  sfr RCAP2H = 0xCB;
  39      =3  sfr TL2    = 0xCC;
  40      =3  sfr TH2    = 0xCD;
  41      =3  
  42      =3  
  43      =3  /*  BIT Registers  */
  44      =3  /*  PSW  */
  45      =3  sbit CY    = PSW^7;
  46      =3  sbit AC    = PSW^6;
  47      =3  sbit F0    = PSW^5;
  48      =3  sbit RS1   = PSW^4;
  49      =3  sbit RS0   = PSW^3;
  50      =3  sbit OV    = PSW^2;
  51      =3  sbit P     = PSW^0; //8052 only
  52      =3  
  53      =3  /*  TCON  */
  54      =3  sbit TF1   = TCON^7;
  55      =3  sbit TR1   = TCON^6;
  56      =3  sbit TF0   = TCON^5;
  57      =3  sbit TR0   = TCON^4;
  58      =3  sbit IE1   = TCON^3;
  59      =3  sbit IT1   = TCON^2;
  60      =3  sbit IE0   = TCON^1;
  61      =3  sbit IT0   = TCON^0;
  62      =3  
  63      =3  /*  IE  */
  64      =3  sbit EA    = IE^7;
  65      =3  sbit ET2   = IE^5; //8052 only
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 5   

  66      =3  sbit ES    = IE^4;
  67      =3  sbit ET1   = IE^3;
  68      =3  sbit EX1   = IE^2;
  69      =3  sbit ET0   = IE^1;
  70      =3  sbit EX0   = IE^0;
  71      =3  
  72      =3  /*  IP  */
  73      =3  sbit PT2   = IP^5;
  74      =3  sbit PS    = IP^4;
  75      =3  sbit PT1   = IP^3;
  76      =3  sbit PX1   = IP^2;
  77      =3  sbit PT0   = IP^1;
  78      =3  sbit PX0   = IP^0;
  79      =3  
  80      =3  /*  P3  */
  81      =3  sbit RD    = P3^7;
  82      =3  sbit WR    = P3^6;
  83      =3  sbit T1    = P3^5;
  84      =3  sbit T0    = P3^4;
  85      =3  sbit INT1  = P3^3;
  86      =3  sbit INT0  = P3^2;
  87      =3  sbit TXD   = P3^1;
  88      =3  sbit RXD   = P3^0;
  89      =3  
  90      =3  /*  SCON  */
  91      =3  sbit SM0   = SCON^7;
  92      =3  sbit SM1   = SCON^6;
  93      =3  sbit SM2   = SCON^5;
  94      =3  sbit REN   = SCON^4;
  95      =3  sbit TB8   = SCON^3;
  96      =3  sbit RB8   = SCON^2;
  97      =3  sbit TI    = SCON^1;
  98      =3  sbit RI    = SCON^0;
  99      =3  
 100      =3  /*  P1  */
 101      =3  sbit T2EX  = P1^1; // 8052 only
 102      =3  sbit T2    = P1^0; // 8052 only
 103      =3               
 104      =3  /*  T2CON  */
 105      =3  sbit TF2    = T2CON^7;
 106      =3  sbit EXF2   = T2CON^6;
 107      =3  sbit RCLK   = T2CON^5;
 108      =3  sbit TCLK   = T2CON^4;
 109      =3  sbit EXEN2  = T2CON^3;
 110      =3  sbit TR2    = T2CON^2;
 111      =3  sbit C_T2   = T2CON^1;
 112      =3  sbit CP_RL2 = T2CON^0;
 113      =3  
 114      =3  #endif
   6      =2  
   7      =2  
   8      =2  //sbit  SI7021_SCLK = P3^4;
   9      =2  //sbit  SI7021_SDA  = P3^3;
  10      =2  sbit  SI7021_SCLK = P1^0;
  11      =2  sbit  SI7021_SDA  = P1^1;
  12      =2  
  13      =2  #define WRITE_CMD   0x80
  14      =2  #define READ_CDM    0x81
  15      =2  #define SALVE_ADDR    0x80
  16      =2  
  17      =2  #define HUMI_HOLD_MASTER  0xE5
  18      =2  #define TEMP_HOLD_MASTER  0xE3
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 6   

  19      =2      
  20      =2  #define HUMI_NOHOLD_MASTER  0xF5
  21      =2  #define TEMP_NOHOLD_MASTER  0xF3
  22      =2  
  23      =2  #define SI7021_SCLK_HIGH()  SI7021_SCLK = BIT_HIGH
  24      =2  #define SI7021_SCLK_LOW() SI7021_SCLK = BIT_LOW
  25      =2  
  26      =2  #define SI7021_SDA_HIGH() SI7021_SDA = BIT_HIGH
  27      =2  #define SI7021_SDA_LOW()  SI7021_SDA = BIT_LOW
  28      =2  
  29      =2  
  30      =2  void measure_si7021 ( unsigned char model, union16 *value );
  31      =2  
  32      =2  
  33      =2  
  34      =2  #endif//ifndef  _SI7021_H
  13      =1  
  14      =1  
  15      =1  
  16      =1  
  17      =1  
  18      =1  
  19      =1  #endif//ifndef  __myConfig_H
  20      =1  
   3          #include <intrins.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  INTRINS.H
   3      =1  
   4      =1  Intrinsic functions for C51.
   5      =1  Copyright (c) 1988-2010 Keil Elektronik GmbH and ARM Germany GmbH
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __INTRINS_H__
  10      =1  #define __INTRINS_H__
  11      =1  
  12      =1  #pragma SAVE
  13      =1  
  14      =1  #if defined (__CX2__)
           =1 #pragma FUNCTIONS(STATIC)
           =1 /* intrinsic functions are reentrant, but need static attribute */
           =1 #endif
  18      =1  
  19      =1  extern void          _nop_     (void);
  20      =1  extern bit           _testbit_ (bit);
  21      =1  extern unsigned char _cror_    (unsigned char, unsigned char);
  22      =1  extern unsigned int  _iror_    (unsigned int,  unsigned char);
  23      =1  extern unsigned long _lror_    (unsigned long, unsigned char);
  24      =1  extern unsigned char _crol_    (unsigned char, unsigned char);
  25      =1  extern unsigned int  _irol_    (unsigned int,  unsigned char);
  26      =1  extern unsigned long _lrol_    (unsigned long, unsigned char);
  27      =1  extern unsigned char _chkfloat_(float);
  28      =1  #if defined (__CX2__)
           =1 extern int           abs       (int);
           =1 #endif
  31      =1  #if !defined (__CX2__)
  32      =1  extern void          _push_    (unsigned char _sfr);
  33      =1  extern void          _pop_     (unsigned char _sfr);
  34      =1  #endif
  35      =1  
  36      =1  #pragma RESTORE
  37      =1  
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 7   

  38      =1  #endif
  39      =1  
   4          #include <string.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  STRING.H
   3      =1  
   4      =1  String functions.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __STRING_H__
  10      =1  #define __STRING_H__
  11      =1  
  12      =1  #ifndef _SIZE_T
  13      =1   #define _SIZE_T
  14      =1   typedef unsigned int size_t;
  15      =1  #endif
  16      =1  
  17      =1  #ifndef NULL
  18      =1   #define NULL ((void *) 0L)
  19      =1  #endif
  20      =1  
  21      =1  #pragma SAVE
  22      =1  #pragma REGPARMS
  23      =1  extern char *strcat (char *s1, char *s2);
  24      =1  extern char *strncat (char *s1, char *s2, int n);
  25      =1  
  26      =1  extern char strcmp (char *s1, char *s2);
  27      =1  extern char strncmp (char *s1, char *s2, int n);
  28      =1  
  29      =1  extern char *strcpy (char *s1, char *s2);
  30      =1  extern char *strncpy (char *s1, char *s2, int n);
  31      =1  
  32      =1  extern int strlen (char *);
  33      =1  
  34      =1  extern char *strchr (const char *s, char c);
  35      =1  extern int strpos (const char *s, char c);
  36      =1  extern char *strrchr (const char *s, char c);
  37      =1  extern int strrpos (const char *s, char c);
  38      =1  
  39      =1  extern int strspn (char *s, char *set);
  40      =1  extern int strcspn (char *s, char *set);
  41      =1  extern char *strpbrk (char *s, char *set);
  42      =1  extern char *strrpbrk (char *s, char *set);
  43      =1  extern char *strstr  (char *s, char *sub);
  44      =1  extern char *strtok  (char *str, const char *set);
  45      =1  
  46      =1  extern char memcmp (void *s1, void *s2, int n);
  47      =1  extern void *memcpy (void *s1, void *s2, int n);
  48      =1  extern void *memchr (void *s, char val, int n);
  49      =1  extern void *memccpy (void *s1, void *s2, char val, int n);
  50      =1  extern void *memmove (void *s1, void *s2, int n);
  51      =1  extern void *memset  (void *s, char val, int n);
  52      =1  #pragma RESTORE
  53      =1  
  54      =1  #endif
   5          #include <reg52.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG52.H
   3      =1  
   4      =1  Header file for generic 80C52 and 80C32 microcontroller.
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 8   

   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __REG52_H__
           =1 #define __REG52_H__
           =1 
           =1 /*  BYTE Registers  */
           =1 sfr P0    = 0x80;
           =1 sfr P1    = 0x90;
           =1 sfr P2    = 0xA0;
           =1 sfr P3    = 0xB0;
           =1 sfr PSW   = 0xD0;
           =1 sfr ACC   = 0xE0;
           =1 sfr B     = 0xF0;
           =1 sfr SP    = 0x81;
           =1 sfr DPL   = 0x82;
           =1 sfr DPH   = 0x83;
           =1 sfr PCON  = 0x87;
           =1 sfr TCON  = 0x88;
           =1 sfr TMOD  = 0x89;
           =1 sfr TL0   = 0x8A;
           =1 sfr TL1   = 0x8B;
           =1 sfr TH0   = 0x8C;
           =1 sfr TH1   = 0x8D;
           =1 sfr IE    = 0xA8;
           =1 sfr IP    = 0xB8;
           =1 sfr SCON  = 0x98;
           =1 sfr SBUF  = 0x99;
           =1 
           =1 /*  8052 Extensions  */
           =1 sfr T2CON  = 0xC8;
           =1 sfr RCAP2L = 0xCA;
           =1 sfr RCAP2H = 0xCB;
           =1 sfr TL2    = 0xCC;
           =1 sfr TH2    = 0xCD;
           =1 
           =1 
           =1 /*  BIT Registers  */
           =1 /*  PSW  */
           =1 sbit CY    = PSW^7;
           =1 sbit AC    = PSW^6;
           =1 sbit F0    = PSW^5;
           =1 sbit RS1   = PSW^4;
           =1 sbit RS0   = PSW^3;
           =1 sbit OV    = PSW^2;
           =1 sbit P     = PSW^0; //8052 only
           =1 
           =1 /*  TCON  */
           =1 sbit TF1   = TCON^7;
           =1 sbit TR1   = TCON^6;
           =1 sbit TF0   = TCON^5;
           =1 sbit TR0   = TCON^4;
           =1 sbit IE1   = TCON^3;
           =1 sbit IT1   = TCON^2;
           =1 sbit IE0   = TCON^1;
           =1 sbit IT0   = TCON^0;
           =1 
           =1 /*  IE  */
           =1 sbit EA    = IE^7;
           =1 sbit ET2   = IE^5; //8052 only
           =1 sbit ES    = IE^4;
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 9   

           =1 sbit ET1   = IE^3;
           =1 sbit EX1   = IE^2;
           =1 sbit ET0   = IE^1;
           =1 sbit EX0   = IE^0;
           =1 
           =1 /*  IP  */
           =1 sbit PT2   = IP^5;
           =1 sbit PS    = IP^4;
           =1 sbit PT1   = IP^3;
           =1 sbit PX1   = IP^2;
           =1 sbit PT0   = IP^1;
           =1 sbit PX0   = IP^0;
           =1 
           =1 /*  P3  */
           =1 sbit RD    = P3^7;
           =1 sbit WR    = P3^6;
           =1 sbit T1    = P3^5;
           =1 sbit T0    = P3^4;
           =1 sbit INT1  = P3^3;
           =1 sbit INT0  = P3^2;
           =1 sbit TXD   = P3^1;
           =1 sbit RXD   = P3^0;
           =1 
           =1 /*  SCON  */
           =1 sbit SM0   = SCON^7;
           =1 sbit SM1   = SCON^6;
           =1 sbit SM2   = SCON^5;
           =1 sbit REN   = SCON^4;
           =1 sbit TB8   = SCON^3;
           =1 sbit RB8   = SCON^2;
           =1 sbit TI    = SCON^1;
           =1 sbit RI    = SCON^0;
           =1 
           =1 /*  P1  */
           =1 sbit T2EX  = P1^1; // 8052 only
           =1 sbit T2    = P1^0; // 8052 only
           =1              
           =1 /*  T2CON  */
           =1 sbit TF2    = T2CON^7;
           =1 sbit EXF2   = T2CON^6;
           =1 sbit RCLK   = T2CON^5;
           =1 sbit TCLK   = T2CON^4;
           =1 sbit EXEN2  = T2CON^3;
           =1 sbit TR2    = T2CON^2;
           =1 sbit C_T2   = T2CON^1;
           =1 sbit CP_RL2 = T2CON^0;
           =1 
           =1 #endif
   6          #include <reg52.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG52.H
   3      =1  
   4      =1  Header file for generic 80C52 and 80C32 microcontroller.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __REG52_H__
           =1 #define __REG52_H__
           =1 
           =1 /*  BYTE Registers  */
           =1 sfr P0    = 0x80;
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 10  

           =1 sfr P1    = 0x90;
           =1 sfr P2    = 0xA0;
           =1 sfr P3    = 0xB0;
           =1 sfr PSW   = 0xD0;
           =1 sfr ACC   = 0xE0;
           =1 sfr B     = 0xF0;
           =1 sfr SP    = 0x81;
           =1 sfr DPL   = 0x82;
           =1 sfr DPH   = 0x83;
           =1 sfr PCON  = 0x87;
           =1 sfr TCON  = 0x88;
           =1 sfr TMOD  = 0x89;
           =1 sfr TL0   = 0x8A;
           =1 sfr TL1   = 0x8B;
           =1 sfr TH0   = 0x8C;
           =1 sfr TH1   = 0x8D;
           =1 sfr IE    = 0xA8;
           =1 sfr IP    = 0xB8;
           =1 sfr SCON  = 0x98;
           =1 sfr SBUF  = 0x99;
           =1 
           =1 /*  8052 Extensions  */
           =1 sfr T2CON  = 0xC8;
           =1 sfr RCAP2L = 0xCA;
           =1 sfr RCAP2H = 0xCB;
           =1 sfr TL2    = 0xCC;
           =1 sfr TH2    = 0xCD;
           =1 
           =1 
           =1 /*  BIT Registers  */
           =1 /*  PSW  */
           =1 sbit CY    = PSW^7;
           =1 sbit AC    = PSW^6;
           =1 sbit F0    = PSW^5;
           =1 sbit RS1   = PSW^4;
           =1 sbit RS0   = PSW^3;
           =1 sbit OV    = PSW^2;
           =1 sbit P     = PSW^0; //8052 only
           =1 
           =1 /*  TCON  */
           =1 sbit TF1   = TCON^7;
           =1 sbit TR1   = TCON^6;
           =1 sbit TF0   = TCON^5;
           =1 sbit TR0   = TCON^4;
           =1 sbit IE1   = TCON^3;
           =1 sbit IT1   = TCON^2;
           =1 sbit IE0   = TCON^1;
           =1 sbit IT0   = TCON^0;
           =1 
           =1 /*  IE  */
           =1 sbit EA    = IE^7;
           =1 sbit ET2   = IE^5; //8052 only
           =1 sbit ES    = IE^4;
           =1 sbit ET1   = IE^3;
           =1 sbit EX1   = IE^2;
           =1 sbit ET0   = IE^1;
           =1 sbit EX0   = IE^0;
           =1 
           =1 /*  IP  */
           =1 sbit PT2   = IP^5;
           =1 sbit PS    = IP^4;
           =1 sbit PT1   = IP^3;
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 11  

           =1 sbit PX1   = IP^2;
           =1 sbit PT0   = IP^1;
           =1 sbit PX0   = IP^0;
           =1 
           =1 /*  P3  */
           =1 sbit RD    = P3^7;
           =1 sbit WR    = P3^6;
           =1 sbit T1    = P3^5;
           =1 sbit T0    = P3^4;
           =1 sbit INT1  = P3^3;
           =1 sbit INT0  = P3^2;
           =1 sbit TXD   = P3^1;
           =1 sbit RXD   = P3^0;
           =1 
           =1 /*  SCON  */
           =1 sbit SM0   = SCON^7;
           =1 sbit SM1   = SCON^6;
           =1 sbit SM2   = SCON^5;
           =1 sbit REN   = SCON^4;
           =1 sbit TB8   = SCON^3;
           =1 sbit RB8   = SCON^2;
           =1 sbit TI    = SCON^1;
           =1 sbit RI    = SCON^0;
           =1 
           =1 /*  P1  */
           =1 sbit T2EX  = P1^1; // 8052 only
           =1 sbit T2    = P1^0; // 8052 only
           =1              
           =1 /*  T2CON  */
           =1 sbit TF2    = T2CON^7;
           =1 sbit EXF2   = T2CON^6;
           =1 sbit RCLK   = T2CON^5;
           =1 sbit TCLK   = T2CON^4;
           =1 sbit EXEN2  = T2CON^3;
           =1 sbit TR2    = T2CON^2;
           =1 sbit C_T2   = T2CON^1;
           =1 sbit CP_RL2 = T2CON^0;
           =1 
           =1 #endif
   7          
   8          
   9          #define U8 unsigned char
  10          #define U16 unsigned int
  11          
  12          extern void ini_lcd(void);
  13          extern void lcd_printf_char(U8 disp_char, U8 row_col);
  14          extern void lcd_printf_string(U8 *disp_str, U8 row_len_col);
  15          
  16          
  17          typedef struct _si7021_value_{
  18            union16 temp;
  19            union16 humi;
  20            unsigned char crc;
  21          }si7021_value_ST, *p_si7021_value_ST;
  22          
  23          si7021_value_ST gv_si7021_value;
  24          
  25          #define CHECK_AA  0xAA
  26          #define CHECK_55  0x55
  27          
  28          unsigned char temp_array[8] = "        ";
  29          unsigned char Rf_Rec_Cnt;
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 12  

  30          
  31          unsigned long cal_temp_u32;
  32          unsigned int cal_temp_u16;
  33          unsigned char RH_value;
  34          
  35          unsigned char TEMP_H;
  36          unsigned char TEMP_L;
  37          
  38          
  39          int main ( void )
  40          {
  41   1        
  42   1        ini_lcd();
  43   1        delay_2us(50000);
  44   1      #if 0 
                 lcd_printf_string(" si7021 ", ROW(0x00)|LEN(0x08)|COL(0x00));
                lcd_printf_string("  htc   ", ROW(0x01)|LEN(0x08)|COL(0x00));
                Rf_Rec_Cnt=243;
                hex_to_assic(Rf_Rec_Cnt,temp_array);
                lcd_printf_string(temp_array, ROW(0x01)|LEN(0x03)|COL(0x00));
                
                lcd_printf_string(".       ", ROW(0x01)|LEN(0x01)|COL(0x03));
                
                Rf_Rec_Cnt=123;
                hex_to_assic(Rf_Rec_Cnt,temp_array);
                lcd_printf_string(temp_array, ROW(0x01)|LEN(0x03)|COL(0x04));
              #endif
  57   1        
  58   1        uart_init ();
  59   1      
  60   1        EA = 1;
  61   1      
  62   1        while ( 1 )
  63   1        {
  64   2      
  65   2          //if ( gv_uart_buflen >= 5 )
  66   2          {
  67   3            measure_si7021 ( TEMP_HOLD_MASTER, (union16 *)(&gv_si7021_value.temp) );
  68   3            measure_si7021 ( HUMI_HOLD_MASTER, (union16 *)(&gv_si7021_value.humi) );
  69   3            gv_uart_buflen = 0;
  70   3            //if ( CHECK_AA==gv_uart_buf[0] && CHECK_55==gv_uart_buf[1] )
  71   3            {
  72   4              gv_uart_buf[2] = gv_si7021_value.temp.uchar[HSB];
  73   4              gv_uart_buf[3] = gv_si7021_value.temp.uchar[LSB];
  74   4              gv_uart_buf[4] = gv_si7021_value.humi.uchar[HSB];
  75   4              gv_uart_buf[5] = gv_si7021_value.humi.uchar[LSB];
  76   4              uart_send_buf ( 0x6, gv_uart_buf );
  77   4              //memset ( (unsigned char *)(&gv_uart_buf[0]), 0, MAX_UART_BUF );
  78   4      //---------------------      
  79   4                  cal_temp_u16 = gv_uart_buf[4];
  80   4                 cal_temp_u16 = cal_temp_u16 <<8;
  81   4                 cal_temp_u16 += gv_uart_buf[5];
  82   4        
  83   4                 cal_temp_u32 =  cal_temp_u16;
  84   4                 cal_temp_u32 = 125* cal_temp_u32;
  85   4                 cal_temp_u32 = cal_temp_u32 >>16;
  86   4                 RH_value = cal_temp_u32;
  87   4                 RH_value = RH_value -6;
  88   4              
  89   4              hex_to_assic(RH_value,temp_array);
  90   4                 lcd_printf_string(temp_array, ROW(0x00)|LEN(0x08)|COL(0x00));
  91   4      //------------------------        
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 13  

  92   4              
  93   4                 cal_temp_u16 = gv_uart_buf[2];
  94   4                 cal_temp_u16 = cal_temp_u16 <<8;
  95   4                 cal_temp_u16 += gv_uart_buf[3];
  96   4                 cal_temp_u32 =  cal_temp_u16;
  97   4                 cal_temp_u32 = 17572* cal_temp_u32;
  98   4                 cal_temp_u32 = cal_temp_u32 >>16;
  99   4                 cal_temp_u32 = cal_temp_u32 -4685;
 100   4                 TEMP_H = cal_temp_u32/100;
 101   4                 TEMP_L = cal_temp_u32%100;
 102   4              hex_to_assic(TEMP_H,temp_array);
 103   4              lcd_printf_string(temp_array, ROW(0x01)|LEN(0x03)|COL(0x00));
 104   4              
 105   4              lcd_printf_string(".       ", ROW(0x01)|LEN(0x01)|COL(0x03));
 106   4              
 107   4              hex_to_assic(TEMP_L,temp_array);
 108   4              lcd_printf_string(temp_array, ROW(0x01)|LEN(0x03)|COL(0x04));
 109   4              
 110   4              
 111   4              delay_2us(50000);
 112   4               }
 113   3          }
 114   2        }
 115   1      }
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 14  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 42
0000 120000      E     LCALL   ini_lcd
                                           ; SOURCE LINE # 43
0003 7F50              MOV     R7,#050H
0005 7EC3              MOV     R6,#0C3H
0007 120000      E     LCALL   _delay_2us
                                           ; SOURCE LINE # 58
000A 120000      E     LCALL   uart_init
                                           ; SOURCE LINE # 60
000D D2AF              SETB    EA
000F         ?C0001:
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
000F 7B00              MOV     R3,#00H
0011 7A00        R     MOV     R2,#HIGH gv_si7021_value
0013 7900        R     MOV     R1,#LOW gv_si7021_value
0015 7FE3              MOV     R7,#0E3H
0017 120000      E     LCALL   _measure_si7021
                                           ; SOURCE LINE # 68
001A 7B00              MOV     R3,#00H
001C 7A00        R     MOV     R2,#HIGH gv_si7021_value+02H
001E 7900        R     MOV     R1,#LOW gv_si7021_value+02H
0020 7FE5              MOV     R7,#0E5H
0022 120000      E     LCALL   _measure_si7021
                                           ; SOURCE LINE # 69
0025 E4                CLR     A
0026 F500        E     MOV     gv_uart_buflen,A
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0028 850000      E     MOV     gv_uart_buf+02H,gv_si7021_value
                                           ; SOURCE LINE # 73
002B 850000      E     MOV     gv_uart_buf+03H,gv_si7021_value+01H
                                           ; SOURCE LINE # 74
002E 850000      E     MOV     gv_uart_buf+04H,gv_si7021_value+02H
                                           ; SOURCE LINE # 75
0031 850000      E     MOV     gv_uart_buf+05H,gv_si7021_value+03H
                                           ; SOURCE LINE # 76
0034 FB                MOV     R3,A
0035 7A00        E     MOV     R2,#HIGH gv_uart_buf
0037 7900        E     MOV     R1,#LOW gv_uart_buf
0039 7F06              MOV     R7,#06H
003B FE                MOV     R6,A
003C 120000      E     LCALL   _uart_send_buf
                                           ; SOURCE LINE # 79
003F 750000      R     MOV     cal_temp_u16,#00H
0042 850000      R     MOV     cal_temp_u16+01H,gv_uart_buf+04H
                                           ; SOURCE LINE # 80
0045 E500        R     MOV     A,cal_temp_u16+01H
0047 750000      R     MOV     cal_temp_u16+01H,#00H
004A F500        R     MOV     cal_temp_u16,A
                                           ; SOURCE LINE # 81
004C E500        E     MOV     A,gv_uart_buf+05H
004E 2500        R     ADD     A,cal_temp_u16+01H
0050 F500        R     MOV     cal_temp_u16+01H,A
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 15  

0052 E4                CLR     A
0053 3500        R     ADDC    A,cal_temp_u16
0055 F500        R     MOV     cal_temp_u16,A
                                           ; SOURCE LINE # 83
0057 FE                MOV     R6,A
0058 E4                CLR     A
0059 850000      R     MOV     cal_temp_u32+03H,cal_temp_u16+01H
005C 8E00        R     MOV     cal_temp_u32+02H,R6
005E F500        R     MOV     cal_temp_u32+01H,A
0060 F500        R     MOV     cal_temp_u32,A
                                           ; SOURCE LINE # 84
0062 AF00        R     MOV     R7,cal_temp_u32+03H
0064 AE00        R     MOV     R6,cal_temp_u32+02H
0066 AD00        R     MOV     R5,cal_temp_u32+01H
0068 AC00        R     MOV     R4,cal_temp_u32
006A 7B7D              MOV     R3,#07DH
006C FA                MOV     R2,A
006D F9                MOV     R1,A
006E F8                MOV     R0,A
006F 120000      E     LCALL   ?C?LMUL
0072 8F00        R     MOV     cal_temp_u32+03H,R7
0074 8E00        R     MOV     cal_temp_u32+02H,R6
0076 8D00        R     MOV     cal_temp_u32+01H,R5
0078 8C00        R     MOV     cal_temp_u32,R4
                                           ; SOURCE LINE # 85
007A 7810              MOV     R0,#010H
007C 120000      E     LCALL   ?C?ULSHR
007F 8F00        R     MOV     cal_temp_u32+03H,R7
0081 8E00        R     MOV     cal_temp_u32+02H,R6
0083 8D00        R     MOV     cal_temp_u32+01H,R5
0085 8C00        R     MOV     cal_temp_u32,R4
                                           ; SOURCE LINE # 86
0087 8F00        R     MOV     RH_value,R7
                                           ; SOURCE LINE # 87
0089 74FA              MOV     A,#0FAH
008B 2500        R     ADD     A,RH_value
008D F500        R     MOV     RH_value,A
                                           ; SOURCE LINE # 89
008F 7B00              MOV     R3,#00H
0091 7A00        R     MOV     R2,#HIGH temp_array
0093 7900        R     MOV     R1,#LOW temp_array
0095 FF                MOV     R7,A
0096 120000      E     LCALL   _hex_to_assic
                                           ; SOURCE LINE # 90
0099 7B00              MOV     R3,#00H
009B 7A00        R     MOV     R2,#HIGH temp_array
009D 7900        R     MOV     R1,#LOW temp_array
009F 7DB8              MOV     R5,#0B8H
00A1 120000      E     LCALL   _lcd_printf_string
                                           ; SOURCE LINE # 93
00A4 750000      R     MOV     cal_temp_u16,#00H
00A7 850000      R     MOV     cal_temp_u16+01H,gv_uart_buf+02H
                                           ; SOURCE LINE # 94
00AA E500        R     MOV     A,cal_temp_u16+01H
00AC 750000      R     MOV     cal_temp_u16+01H,#00H
00AF F500        R     MOV     cal_temp_u16,A
                                           ; SOURCE LINE # 95
00B1 E500        E     MOV     A,gv_uart_buf+03H
00B3 2500        R     ADD     A,cal_temp_u16+01H
00B5 F500        R     MOV     cal_temp_u16+01H,A
00B7 E4                CLR     A
00B8 3500        R     ADDC    A,cal_temp_u16
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 16  

00BA F500        R     MOV     cal_temp_u16,A
                                           ; SOURCE LINE # 96
00BC FE                MOV     R6,A
00BD E4                CLR     A
00BE 850000      R     MOV     cal_temp_u32+03H,cal_temp_u16+01H
00C1 8E00        R     MOV     cal_temp_u32+02H,R6
00C3 F500        R     MOV     cal_temp_u32+01H,A
00C5 F500        R     MOV     cal_temp_u32,A
                                           ; SOURCE LINE # 97
00C7 AF00        R     MOV     R7,cal_temp_u32+03H
00C9 AE00        R     MOV     R6,cal_temp_u32+02H
00CB AD00        R     MOV     R5,cal_temp_u32+01H
00CD AC00        R     MOV     R4,cal_temp_u32
00CF 7BA4              MOV     R3,#0A4H
00D1 7A44              MOV     R2,#044H
00D3 F9                MOV     R1,A
00D4 F8                MOV     R0,A
00D5 120000      E     LCALL   ?C?LMUL
00D8 8F00        R     MOV     cal_temp_u32+03H,R7
00DA 8E00        R     MOV     cal_temp_u32+02H,R6
00DC 8D00        R     MOV     cal_temp_u32+01H,R5
00DE 8C00        R     MOV     cal_temp_u32,R4
                                           ; SOURCE LINE # 98
00E0 7810              MOV     R0,#010H
00E2 120000      E     LCALL   ?C?ULSHR
00E5 8F00        R     MOV     cal_temp_u32+03H,R7
00E7 8E00        R     MOV     cal_temp_u32+02H,R6
00E9 8D00        R     MOV     cal_temp_u32+01H,R5
00EB 8C00        R     MOV     cal_temp_u32,R4
                                           ; SOURCE LINE # 99
00ED E500        R     MOV     A,cal_temp_u32+03H
00EF 24B3              ADD     A,#0B3H
00F1 F500        R     MOV     cal_temp_u32+03H,A
00F3 E500        R     MOV     A,cal_temp_u32+02H
00F5 34ED              ADDC    A,#0EDH
00F7 F500        R     MOV     cal_temp_u32+02H,A
00F9 E500        R     MOV     A,cal_temp_u32+01H
00FB 34FF              ADDC    A,#0FFH
00FD F500        R     MOV     cal_temp_u32+01H,A
00FF E500        R     MOV     A,cal_temp_u32
0101 34FF              ADDC    A,#0FFH
0103 F500        R     MOV     cal_temp_u32,A
                                           ; SOURCE LINE # 100
0105 E4                CLR     A
0106 7B64              MOV     R3,#064H
0108 FA                MOV     R2,A
0109 F9                MOV     R1,A
010A F8                MOV     R0,A
010B AF00        R     MOV     R7,cal_temp_u32+03H
010D AE00        R     MOV     R6,cal_temp_u32+02H
010F AD00        R     MOV     R5,cal_temp_u32+01H
0111 AC00        R     MOV     R4,cal_temp_u32
0113 120000      E     LCALL   ?C?ULDIV
0116 8F00        R     MOV     TEMP_H,R7
                                           ; SOURCE LINE # 101
0118 E4                CLR     A
0119 7B64              MOV     R3,#064H
011B FA                MOV     R2,A
011C F9                MOV     R1,A
011D F8                MOV     R0,A
011E AF00        R     MOV     R7,cal_temp_u32+03H
0120 AE00        R     MOV     R6,cal_temp_u32+02H
C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 17  

0122 AD00        R     MOV     R5,cal_temp_u32+01H
0124 AC00        R     MOV     R4,cal_temp_u32
0126 120000      E     LCALL   ?C?ULDIV
0129 AF03              MOV     R7,AR3
012B 8F00        R     MOV     TEMP_L,R7
                                           ; SOURCE LINE # 102
012D 7B00              MOV     R3,#00H
012F 7A00        R     MOV     R2,#HIGH temp_array
0131 7900        R     MOV     R1,#LOW temp_array
0133 AF00        R     MOV     R7,TEMP_H
0135 120000      E     LCALL   _hex_to_assic
                                           ; SOURCE LINE # 103
0138 7B00              MOV     R3,#00H
013A 7A00        R     MOV     R2,#HIGH temp_array
013C 7900        R     MOV     R1,#LOW temp_array
013E 7DD0              MOV     R5,#0D0H
0140 120000      E     LCALL   _lcd_printf_string
                                           ; SOURCE LINE # 105
0143 7BFF              MOV     R3,#0FFH
0145 7A00        R     MOV     R2,#HIGH ?SC_0
0147 7900        R     MOV     R1,#LOW ?SC_0
0149 7DC3              MOV     R5,#0C3H
014B 120000      E     LCALL   _lcd_printf_string
                                           ; SOURCE LINE # 107
014E 7B00              MOV     R3,#00H
0150 7A00        R     MOV     R2,#HIGH temp_array
0152 7900        R     MOV     R1,#LOW temp_array
0154 AF00        R     MOV     R7,TEMP_L
0156 120000      E     LCALL   _hex_to_assic
                                           ; SOURCE LINE # 108
0159 7B00              MOV     R3,#00H
015B 7A00        R     MOV     R2,#HIGH temp_array
015D 7900        R     MOV     R1,#LOW temp_array
015F 7DD4              MOV     R5,#0D4H
0161 120000      E     LCALL   _lcd_printf_string
                                           ; SOURCE LINE # 111
0164 7F50              MOV     R7,#050H
0166 7EC3              MOV     R6,#0C3H
0168 120000      E     LCALL   _delay_2us
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
016B 020000      R     LJMP    ?C0001
             ; FUNCTION main (END)

C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_measure_si7021. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
p_si7021_value_ST. . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
_hex_to_assic. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
cal_temp_u32 . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0000H  4
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
cal_temp_u16 . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0004H  2
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_delay_2us . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
union32. . . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  4
  _long. . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  uint . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  uchar. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
union16. . . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  2
  uint . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  uchar. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RH_value . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
gv_uart_buf. . . . . . . . . . . . . .  EXTERN   DATA   ARRAY    -----  10
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_lcd_printf_string . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
s8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
si7021_value_ST. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  temp . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0000H  2
  humi . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0002H  2
  crc. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
Rf_Rec_Cnt . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0007H  1
temp_array . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0008H  8
f32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  FLOAT    -----  4
l32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
uart_init. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ini_lcd. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
s16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
gv_uart_buflen . . . . . . . . . . . .  EXTERN   DATA   U_CHAR   -----  1
TEMP_H . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0010H  1
TEMP_L . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0011H  1
gv_si7021_value. . . . . . . . . . . .  PUBLIC   DATA   STRUCT   0012H  5
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
_si7021_value_ . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  5
  temp . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0000H  2
  humi . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0002H  2
  crc. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_uart_send_buf . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
union32_ . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  4
  _long. . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  uint . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  uchar. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
union16_ . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  2
  uint . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  uchar. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1

C51 COMPILER V9.51   USER_MAIN                                                             03/11/2015 10:27:33 PAGE 19  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
